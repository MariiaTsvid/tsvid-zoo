// (C) 2011 Jan-Willem Krans (janwillem32 <at> hotmail.com)
// This file is part of Video pixel shader pack.
// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

// color gradients
// This shader should be run as a screen space pixel shader.
// This shader requires compiling with ps_2_0, but higher is better, see http://en.wikipedia.org/wiki/Pixel_shader to look up what PS version your video card supports.
// If possible, avoid compiling with the software emulation modes (ps_?_sw). Pixel shaders require a lot of processing power to run in real-time software mode.
// This shader will create color gradients.

// fractions, either decimal or not, are allowed
// ColorTopLeft, ColorTopRight, ColorBottomLeft and ColorBottomRight, assign colors in a linear float4(Red, Green, Blue, Alpha) format
#define ColorTopLeft float4(0, .015625, 0, 1)
#define ColorTopRight float4(0, 0, .015625, 1)
#define ColorBottomLeft float4(.015625, 0, 0, 1)
#define ColorBottomRight float4(0, 0, 0, 1)
// ProcessingGamma, the gamma value of the working surfaces
#define ProcessingGamma 1

float4 main(float2 tex : TEXCOORD0) : COLOR
{
	return pow(lerp(lerp(ColorTopLeft, ColorTopRight, tex.x), lerp(ColorBottomLeft, ColorBottomRight, tex.x), tex.y), 1/ProcessingGamma);// output gradient
}